[versions]
springBoot = "3.4.1"
springCloud = "2023.0.3"
hutool = "5.8.35"
slf4jApi = "2.0.16"
logstash = "8.0"
loki4j = "1.5.2"
jjwt = "0.12.6"
springdoc = "2.7.0"
r2dbcMysql = "1.3.0"
vavr = "0.10.5"
redisson = "3.41.0"
spotbugsAnnotations = "4.8.6"
swaggerAnnotations = "2.2.27"
mapstruct = "1.6.3"
mapstructSpring = "1.1.2"
jreleaserhVersion = "1.15.0"
qualityVersion = "5.0.0"
opentelemetry = "2.11.0"
reactorRabbitmq = "1.5.6"
swaggerV3Annotations = "2.2.27"
awsSdk = "2.29.39"
okhttp3 = "5.0.0-alpha.14"
lombok = "1.18.36"

[libraries]
r2dbc-mysql = { group = "io.asyncer", name = "r2dbc-mysql", version.ref = "r2dbcMysql" }
redisson-starter = { group = "org.redisson", name = "redisson-spring-boot-starter", version.ref = "redisson" }
redisson = { group = "org.redisson", name = "redisson", version.ref = "redisson" }
logstash-logback-encoder = { group = "net.logstash.logback", name = "logstash-logback-encoder", version.ref = "logstash" }
loki4j-logback = { group = "com.github.loki4j", name = "loki-logback-appender", version.ref = "loki4j" }
jsonwebtoken = { group = "io.jsonwebtoken", name = "jjwt", version.ref = "jjwt" }
spotbugs-annotations = { group = "com.github.spotbugs", name = "spotbugs-annotations", version.ref = "spotbugsAnnotations" }
mapstruct = { group = "org.mapstruct", name = "mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { group = "org.mapstruct", name = "mapstruct-processor", version.ref = "mapstruct" }
mapstruct-spring = { group = "org.mapstruct.extensions.spring", name = "mapstruct-spring-annotations", version.ref = "mapstructSpring" }
hutool = { group = "cn.hutool", name = "hutool-all", version.ref = "hutool" }
slf4j-api = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4jApi" }
swagger-annotations = { group = "io.swagger.core.v3", name = "swagger-annotations", version.ref = "swaggerAnnotations" }
spring-doc = { group = "org.springdoc", name = "springdoc-openapi-starter-webflux-ui", version.ref = "springdoc" }
vavr = { group = "io.vavr", name = "vavr", version.ref = "vavr" }
opentelemetry-extension = { group = "io.opentelemetry.instrumentation", name = "opentelemetry-instrumentation-annotations", version.ref = "opentelemetry" }
reactor-rabbitmq = { group = "io.projectreactor.rabbitmq", name = "reactor-rabbitmq", version.ref = "reactorRabbitmq" }
swagger-v3-annotations = { group = "io.swagger.core.v3", name = "swagger-annotations-jakarta", version.ref = "swaggerV3Annotations" }
aws-sdk-s3 = { group = "software.amazon.awssdk", name = "s3", version.ref = "awsSdk" }
aws-sdk-sts = { group = "software.amazon.awssdk", name = "sts", version.ref = "awsSdk" }
squareup-okhttp3 = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp3" }
lombok = { group = "org.projectlombok", name = "lombok", version.ref = "lombok" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
publish-release = { id = "org.jreleaser", version.ref = "jreleaserhVersion" }
code-quality = { id = "ru.vyarus.quality", version.ref = "qualityVersion" }
